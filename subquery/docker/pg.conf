# Memory configuration - 4GB RAM, optimized for JSON operations
shared_buffers = 768MB                  # Increased for JSON operations
work_mem = 24MB                         # Increased for JSON aggregation
maintenance_work_mem = 128MB            # Increased for maintenance
effective_cache_size = 2GB              # 50% of RAM
temp_buffers = 16MB                     # Increased for temp operations

# Connection and worker settings - 6vCPU
max_connections = 40                    # Increased for more concurrent operations
max_worker_processes = 3                # One per physical core
max_parallel_workers_per_gather = 2     # Allow parallel scans
max_parallel_workers = 3                # Match physical cores

# JSON and JSONB specific settings
jit = on                               # Enable JIT for complex JSON operations
jit_above_cost = 50000                 # Lower threshold for JSON operations
jit_inline_above_cost = 75000
jit_optimize_above_cost = 100000

# Query tuning for frequent updates
random_page_cost = 1.1                 # SSD optimization
effective_io_concurrency = 200         # Increased for SSD
parallel_tuple_cost = 0.1              # Encourage parallelism
parallel_setup_cost = 500              # Encourage parallelism

# Autovacuum settings - Aggressive for frequent updates
autovacuum = on
autovacuum_max_workers = 2
autovacuum_naptime = 20s               # More frequent for updates
autovacuum_vacuum_scale_factor = 0.05  # More aggressive
autovacuum_analyze_scale_factor = 0.025
vacuum_cost_delay = 1ms                # Reduced delay
vacuum_cost_limit = 600                # Increased for 6vCPU

# WAL settings for write-heavy workload
checkpoint_timeout = 15min
checkpoint_completion_target = 0.9
max_wal_size = 2GB                     # Increased for write-heavy load
min_wal_size = 1GB
wal_buffers = 16MB

# Additional optimizations
commit_delay = 1000                    # Group commits
commit_siblings = 5
default_statistics_target = 500        # Better statistics for complex queries

# Extensions
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.max = 5000
pg_stat_statements.track = all
pg_stat_statements.track_utility = off

# Monitoring
track_activities = on
track_counts = on
track_io_timing = on                   # Enable for better I/O monitoring
log_min_duration_statement = 1000      # Log slow queries

listen_addresses = '*'
port = 5432